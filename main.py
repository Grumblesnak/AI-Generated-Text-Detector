# Import necessary packages
import numpy as np
import tensorflow as tf
import tkinter as tk
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score
from tkinter import Label, Text, Button, messagebox

# Training data is the most important part of the program
# A program could mechanically work (going over text, producing outputs, etc.)
# Without proper training data ("Here is what Human and AI text looks like") then it will lack proper functionality
def analyse_text(input_text):
    # Training data for checking against input text (0 for human, 1 for AI)
    # Human examples have been sourced from book quotes or professional papers
    # AI examples have been generated by ChatGPT from prompts
    training_data = [
        ("The sun rose slowly, as if it wasn't sure it was worth all the effort.", 0),
        ("Grinning like a necrophiliac in a morgue.", 0),
        ("He moved in a way that suggested he was attempting the world speed record for the nonchalant walk.", 0),
        ("Then the storm broke, and the dragons danced.", 0),
        ("The seeds of war are oft planted during times of peace.", 0),
        ("Only you could have won me away from the sea. I came back from the ends of the earth for you.", 0),
        ("In a hole in the ground there lived a hobbit.", 0),
        ("So comes snow after fire, and even dragons have their endings.", 0),
        ("May the wind under your wings bear you where the sun sails and the moon walks.", 0),
        ("Compounds of silicon, in the form of the naturally occurring silicates, have been of service to man for thousands of years and belong to the oldest of man's raw materials.", 0),
        ("The available statistical material on the production of silicones in individual countries and on a world scale is sparse and not without contradictions.", 0),
        ("In the development of any polyorganosiloxane and, indeed, any polymeric organosilicon compound, the first problem is usually the synthesis of the monomeric intermediates.", 0),
        ("In the whimsical realm of Discworld, Rincewind finds himself entangled in comical misadventures, a true testament to Pratchett's unique narrative.", 1),
        ("Science is an endless search for truth. Any representation of reality we develop can be only partial. There is no finality, sometimes no single best representation. There is only deeper understanding, more revealing and enveloping representations.", 0),
        ("Science is impelled by two main factors, technological advance and a guiding vision (overview). A properly balanced relationship between the two is key to the successful development of a science: without the proper technological advances the road ahead is blocked.", 0),
        ("Look back a hundred years. Didn't a similar sense of a science coming to completion pervade physics at the 19th century's endâ€”the big problems were all solved; from here on out it was just a matter of working out the details?", 0),
        ("Electrophotography is one means of arranging 100 million pigmented plastic particles on a sheet of paper to faithfully replicate an original. It is based on many diverse phenomena and employs many properties of matter.", 0),
        ("Science and engineering are based on measurements and comparisons. Thus, we need rules about how things are measured and compared, and we need experiments to establish the units for those measurements and comparisons.", 0),
        ("You may wonder whether such accuracy is actually needed or worth the effort. Here is one example of the worth: Without clocks of extreme accuracy, the Global Positioning System (GPS) that is now vital to worldwide navigation would be useless.", 0),
        ("As the inept wizard Rincewind stumbles through absurd scenarios, Pratchett's humor shines, creating a delightful blend of fantasy and satire.", 1),
        ("Terry Pratchett's second Discworld novel continues to captivate with its witty prose and clever exploration of fantastical elements.", 1),
        ("In the intricate tapestry of Westeros' history, Martin weaves a compelling saga, chronicling the rise of House Targaryen and their dragons.", 1),
        ("George R.R. Martin's meticulous storytelling delves into the political intrigues and power struggles that shaped the Targaryen dynasty.", 1),
        ("Dragons soar and empires crumble in Martin's masterful narrative, bringing to life the epic history of the fiery-blooded rulers of Westeros.", 1),
        ("Bilbo Baggins' unexpected journey unfolds with Tolkien's enchanting prose, whisking readers away to the heart of Middle-earth.", 1),
        ("J.R.R. Tolkien's classic tale of adventure and self-discovery follows Bilbo on a quest filled with dwarves, dragons, and the allure of the One Ring.", 1),
        ("In the Shire and beyond, Tolkien's vivid descriptions and rich world-building create a timeless fantasy that continues to captivate readers.", 1),
        ("In the realm of Chemistry, elements bond and react, unveiling the intricacies of matter's composition and the fascinating dance of atoms.", 1),
        ("Chemists decipher the language of molecules, unlocking the secrets of chemical reactions that shape the foundation of our material world.", 1),
        ("From the periodic table to chemical equations, Chemistry unravels the hidden connections between substances, providing insights into the building blocks of life.", 1),
        ("Biology delves into the wonders of life, exploring the complexities of cells, DNA, and ecosystems, revealing the interconnected web of living organisms.", 1),
        ("Biologists unravel the mysteries of evolution, adaptation, and biodiversity, showcasing the diversity and resilience of life on Earth.", 1),
        ("From microscopic organisms to the vast ecosystems, Biology unveils the symphony of life, illustrating the intricate balance that sustains our planet.", 1),
        ("Physics unravels the laws governing the universe, from the microscopic world of particles to the cosmic dance of planets and galaxies.", 1),
        ("Physicists explore the fundamental forces shaping reality, from gravity to electromagnetism, unveiling the mathematical beauty that underlies the physical world.", 1),
        ("In the pursuit of understanding energy, motion, and the fabric of space-time, Physics reveals the grand tapestry of the cosmos, inviting us to comprehend the fundamental nature of existence.", 1),
        ("Renewable energy sources offer a sustainable path forward, mitigating environmental impact and fostering a cleaner, greener future.", 1),
        ("The intricacies of artificial intelligence continue to reshape the technological landscape, pushing the boundaries of innovation and human-machine interaction.", 1),
    ]

    # These will be used for the X and y training data using the human and AI examples, later be updated to use files
    # Feature extraction
    vectorizer = CountVectorizer()
    X = vectorizer.fit_transform([data[0] for data in training_data])

    # Split training data into features and labels
    y = np.array([data[1] for data in training_data])

    # Train the model
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)
    model = MultinomialNB()
    model.fit(X_train, y_train)

    # Analyse input text
    input_vector = vectorizer.transform([input_text])
    prediction = model.predict(input_vector)

    # Return the AI likelihood prediction probability
    return model.predict_proba(input_vector)[0][1] * 100

# Simple GUI built using Tkinter
class TextDetectorGUI:
    def __init__(self, master):
        self.master = master
        master.title("AI Text Detector")  # This will be the title of the GUI window

        self.label = Label(master, text="Input Suspected Text: ")  # Label to indicate what the below entry box is for
        self.label.pack()

        self.text_entry = Text(master, height=5, width=50)  # What the label above points to, where text is input for analysis
        self.text_entry.pack()

        self.analyse_button = Button(master, text="Scan", command=self.analyse_text)  # Button will call the program to analyse whatever text is within the above input
        self.analyse_button.pack(side=tk.LEFT)  # Positions the button on the left of the GUI window

        self.exit_button = Button(master, text="Exit", command=self.exit_program)  # Button will exit the program, first calling a confirmation window beforehand just in case
        self.exit_button.pack(side=tk.RIGHT)  # Positions the button on the right of the GUI window

        self.result_label = Label(master, text="")  # This will display the result of the analysis
        self.result_label.pack()

    def analyse_text(self):  # Method will receive the text to be analysed then updates the above label with the result
        input_text = self.text_entry.get("1.0", tk.END).strip()
        probability = analyse_text(input_text)
        result_text = f"AI-generation probability: {probability}%"
        self.result_label.config(text=result_text)

    def exit_program(self):  # Method will ask for confirmation before exiting the program
        if messagebox.askokcancel("Exit", "Are you sure?"):
            self.master.destroy()


# Ensures the script is actually being run correctly, if it is then the GUI will run properly in a Tk event loop
if __name__ == "__main__":
    root = tk.Tk()
    app = TextDetectorGUI(root)
    root.mainloop()
